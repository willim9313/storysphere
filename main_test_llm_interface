# from src.core.nlp_utils import LlmOperator
from src.core.nlp.llm_operator import LlmOperator
from src.core.llm.gemini_client import GeminiClient
from dotenv import load_dotenv
import os

load_dotenv()
API_KEY = os.getenv("GEMINI_API_KEY")
MODEL_NAME = os.getenv("GEMINI_MODEL")

text = """
    But if there were hardships to be borne, they were partly
    offset by the fact that life nowadays had a greater dignity
    than it had had before. There were more songs, more
    speeches, more processions. Napoleon had commanded that
    once a week there should be held something called a
    Spontaneous Demonstration, the object of which was to
    celebrate the struggles and triumphs of Animal Farm. At the
    appointed time the animals would leave their work and
    march round the precincts of the farm in military formation,
    with the pigs leading, then the horses, then the cows, then the
    sheep, and then the poultry. The dogs flanked the procession
    and at the head of all marched Napoleon's black cockerel.
    Boxer and Clover always carried between them a green
    banner marked with the hoof and the horn and the caption,
    "Long live Comrade Napoleon!" Afterwards there were
    recitations of poems composed in Napoleon's honour, and a
    speech by Squealer giving particulars of the latest increases
    in the production of foodstuffs, and on occasion a shot was
    fired from the gun. The sheep were the greatest devotees of
    the Spontaneous Demonstration, and if anyone complained
    (as a few animals sometimes did, when no pigs or dogs were
    near) that they wasted time and meant a lot of standing about
    in the cold, the sheep were sure to silence him with a
    tremendous bleating of "Four legs good, two legs bad!" But
    by and large the animals enjoyed these celebrations. They
    found it comforting to be reminded that, after all, they were
    truly their own masters and that the work they did was for
    their own benefit. So that, what with the songs, the
    processions, Squealer's lists of figures, the thunder of the
    gun, the crowing of the cockerel, and the fluttering of the
    flag, they were able to forget that their bellies were empty, at
    least part of the time.
    """
from pprint import pprint
    
# print(f'kpe_tool test')
# tool = KpeTool()
# print(tool.extract_keywords(text, n=10))
    
    
    

# print(t.extract_keyword(text))
client = LlmOperator(GeminiClient(API_KEY, MODEL_NAME))
# print('client.entity_types')
# print(client.entity_types)
# print('client.relation_types')
# print(client.relation_types)
# print('client.attribute_types')
# print(client.attribute_types)
# resp = client.extract_kg_elements(text)
# pprint(resp.entities)
# print(type(resp))
resp = client.nu_chat(content="Hi, can you help me with some questions?",
                       ref_info="1993年這份專案的作者誕生了 \n這份專案的目的是為了讓人們更好地理解和使用文本處理技術。")
print(f'nu_chat: \n{resp}\n')


## test summarize
# resp = client.summarize(text)
# print(f'summarize: \n{resp}\n')
# resp = client.nu_summarize(content=text, max_length=200)
# print(f'nu_summarize: \n{resp}\n')

## test extract_keyword
# resp = client.extract_keyword(text)
# print(f'extract_keyword: \n{resp}\n')
# resp = client.nu_extract_keyword(content=text, top_k=10)
# print(f'nu_extract_keyword: \n{resp}\n')

## test extract_kg_elements
resp = client.nu_extract_kg_elements(content=text)
print(f'nu_extract_kg_elements: \n{resp}\n')

# resp = client.extract_kg_elements(text)
# print(f'extract_kg_elements: \n{resp}\n')

client.close()